from pygame import *

#parent class for sprites
class GameSprite(sprite.Sprite):
    #class constructor
    def __init__(self, player_image, player_x, player_y, player_speed):
        super().__init__()
        #every sprite must store the image property
        self.image = transform.scale(image.load(player_image), (65, 65))
        self.speed = player_speed
        #every sprite must have the rect property â€“ the rectangle it is fitted in
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

#child class for the player
class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < win_width - 80:
            self.rect.x += self.speed
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed

#child class for the enemy
class Enemy(GameSprite):
    direction = "left"
    def update(self):
        if self.rect.x <= 470:
            self.direction = "right"
        if self.rect.x >= win_width - 85:
            self.direction = "left"

        if self.direction == "left":
            self.rect.x -= self.speed
            self.rect.y += self.speed
        else:
            self.rect.x += self.speed
            self.rect.y -= self.speed

class Wall(sprite.Sprite):
    def __init__(self, color_1, color_2, color_3, wall_width, wall_height, wall_x, wall_y):
        self.color_1 = color_1
        self.color_2 = color_2
        self.color_3 = color_3
        self.wall_width = wall_width
        self.wall_height = wall_height

        self.image = Surface((wall_width,wall_height))
        self.image.fill((color_1,color_2,color_3))

        self.rect = self.image.get_rect()
        self.rect.x = wall_x
        self.rect.y = wall_y

    def draw_wall(self):
        draw.rect(window, (self.color_1,self.color_2,self.color_3), (self.rect.x,self.rect.y,self.wall_width,self.wall_height))

#Game scene:
win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption("Maze")
background = transform.scale(image.load("background.jpg"), (win_width, win_height))

#Game characters:
packman = Player('hero.png', 5, win_height - 80, 4)
monster = Enemy('cyborg.png', win_width - 80, 280, 3)
boss = Enemy('cyborg.png', win_width - 70, 200, 5)
final = GameSprite('treasure.png', win_width - 120, win_height - 80, 0)

#perkataan
font.init()
font = font.Font(None, 140)
win = font.render('YOU WIN!', True, (255, 215, 0))
lose = font.render('YOU LOSE!', True, (180, 0, 0))

game = True
finish = False
clock = time.Clock()
FPS = 60

#music
mixer.init()
mixer.music.load('jungles.ogg')
mixer.music.play()

money = mixer.Sound('money.ogg')
kick = mixer.Sound('kick.ogg')

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish != True:
        window.blit(background,(0, 0))
        packman.update()
        monster.update()
        boss.update()

        #wall :) (color,width,height,x,y)
        w1 = Wall(169,50,60,15,400,70,200)
        w1.draw_wall()
        w2 = Wall(200,70,40,15,400,150,0)
        w2.draw_wall()
        w3 = Wall(150,180,135,15,350,240,300)
        w3.draw_wall()
        w4 = Wall(150,180,135,200,15,155,150)
        w4.draw_wall()
        packman.reset()
        monster.reset()
        boss.reset()
        final.reset()

        if sprite.collide_rect(packman, monster) or sprite.collide_rect(packman, boss):
            finish = True
            window.blit(lose, (200,200))
            kick.play()

        if sprite.collide_rect(packman,w1) or sprite.collide_rect(packman,w2) or sprite.collide_rect(packman,w3) or sprite.collide_rect(packman,w4):
            packman.rect.x = 5
            packman.rect.y = win_height - 80

        if sprite.collide_rect(packman,final):
            finish = True
            window.blit(win, (200,200))
            money.play()

    display.update()
    clock.tick(FPS)
